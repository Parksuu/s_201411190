# coding: utf-8
#!/usr/bin/env python

import os
import requests
import urlparse
import mylib
import re
from pymongo import MongoClient
import matplotlib
import matplotlib.pyplot as plt 


#Global variables
list_of_date1=['2016-06-03','2016-06-04','2016-06-05','2016-06-06','2016-06-07','2016-06-08','2016-06-09','2016-06-10','2016-06-11','2016-06-12','2016-06-13','2016-06-14','2016-06-15','2016-06-16','2016-06-17','2016-06-18','2016-06-19','2016-06-20','2016-06-21','2016-06-22','2016-06-23','2016-06-24','2016-06-25','2016-06-26','2016-06-27','2016-06-28','2016-06-29','2016-06-30',\
               '2016-07-01','2016-07-02','2016-07-03','2016-07-04','2016-07-05','2016-07-06','2016-07-07','2016-07-08','2016-07-09','2016-07-10','2016-07-11','2016-07-12','2016-07-13','2016-07-14','2016-07-15','2016-07-16','2016-07-17','2016-07-18','2016-07-19','2016-07-20','2016-07-21','2016-07-22','2016-07-23','2016-07-24','2016-07-25','2016-07-26','2016-07-27','2016-07-28','2016-07-29','2016-07-30','2016-07-31',\
               '2016-08-01','2016-08-02','2016-08-03','2016-08-04','2016-08-05','2016-08-06','2016-08-07','2016-08-08','2016-08-09','2016-08-10','2016-08-11','2016-08-12','2016-08-13','2016-08-14','2016-08-15','2016-08-16','2016-08-17','2016-08-18','2016-08-19','2016-08-20','2016-08-21','2016-08-22','2016-08-23','2016-08-24','2016-08-25','2016-08-26','2016-08-27','2016-08-28','2016-08-29','2016-08-30','2016-08-31',\
               '2016-09-01','2016-09-02','2016-09-03','2016-09-04','2016-09-05','2016-09-06','2016-09-07','2016-09-08','2016-09-10','2016-09-11','2016-09-12','2016-09-13','2016-09-14','2016-09-15','2016-09-16','2016-09-17','2016-09-18','2016-09-19','2016-09-20','2016-09-21','2016-09-22','2016-09-23','2016-09-24','2016-09-25','2016-09-26','2016-09-27','2016-09-28','2016-09-29','2016-09-30',\
               '2016-10-01','2016-10-02','2016-10-03','2016-10-04','2016-10-05','2016-10-06','2016-10-07','2016-10-08','2016-10-09','2016-10-10','2016-10-11','2016-10-12','2016-10-13','2016-10-14','2016-10-15','2016-10-16','2016-10-17','2016-10-18','2016-10-19','2016-10-20','2016-10-21','2016-10-22','2016-10-23','2016-10-24','2016-10-25','2016-10-26','2016-10-27','2016-10-28','2016-10-29','2016-10-30','2016-10-31',\
               '2016-11-01','2016-11-02','2016-11-03','2016-11-04','2016-11-05','2016-11-06','2016-11-07','2016-11-08','2016-11-09','2016-11-10','2016-11-11','2016-11-12','2016-11-13','2016-11-14','2016-11-15','2016-11-16','2016-11-17','2016-11-19','2016-11-20','2016-11-21','2016-11-22','2016-11-23','2016-11-24','2016-11-25','2016-11-26','2016-11-27','2016-11-28','2016-11-29','2016-11-30',\
               '2016-12-01','2016-12-02','2016-12-03','2016-12-04','2016-12-05','2016-12-06','2016-12-07','2016-12-08','2016-12-09','2016-12-10','2016-12-11','2016-12-12','2016-12-13','2016-12-14','2016-12-15','2016-12-16','2016-12-17','2016-12-19','2016-12-20','2016-12-21','2016-12-22','2016-12-23','2016-12-24','2016-12-25','2016-12-26','2016-12-27','2016-12-28','2016-12-29','2016-12-30','2016-12-31',\
               '2017-01-01','2017-01-02','2017-01-03','2017-01-04','2017-01-05','2017-01-06','2017-01-07','2017-01-08','2017-01-09','2017-01-10','2017-01-11','2017-01-12','2017-01-13','2017-01-14','2017-01-15','2017-01-16','2017-01-17','2017-01-18','2017-01-19','2017-01-20','2017-01-21','2017-01-22','2017-01-23','2017-01-24','2017-01-25','2017-01-26','2017-01-27','2017-01-28','2017-01-29','2017-01-30','2017-01-31',\
               '2017-02-01','2017-02-02','2017-02-03','2017-02-04','2017-02-05','2017-02-06','2017-02-07','2017-02-08','2017-02-09','2017-02-10','2017-02-11','2017-02-12','2017-02-13','2017-02-14','2017-02-15','2017-02-16','2017-02-17','2017-02-18','2017-02-19','2017-02-20','2017-02-21','2017-02-22','2017-02-23','2017-02-24','2017-02-25','2017-02-26','2017-02-27','2017-02-28',\
               '2017-03-01','2017-03-02','2017-03-03','2017-03-04','2017-03-05','2017-03-06','2017-03-07','2017-03-08','2017-03-09','2017-03-10','2017-03-11','2017-03-12','2017-03-13','2017-03-14','2017-03-15','2017-03-16','2017-03-17','2017-03-18','2017-03-19','2017-03-20','2017-03-21','2017-03-22','2017-03-23','2017-03-24','2017-03-25','2017-03-26','2017-03-27','2017-03-28','2017-03-29','2017-03-30','2017-03-31',\
               '2017-04-01','2017-04-02','2017-04-03','2017-04-04','2017-04-05','2017-04-06','2017-04-07','2017-04-08','2017-04-09','2017-04-10','2017-04-11','2017-04-12','2017-04-13','2017-04-14','2017-04-15','2017-04-16','2017-04-17','2017-04-18','2017-04-19','2017-04-20','2017-04-21','2017-04-22','2017-04-23','2017-04-24','2017-04-25','2017-04-26','2017-04-27','2017-04-28','2017-04-29','2017-04-30',\
               '2017-05-02','2017-05-03','2017-05-04','2017-05-05','2017-05-06','2017-05-07','2017-05-08','2017-05-09','2017-05-10','2017-05-11','2017-05-12','2017-05-13','2017-05-14','2017-05-15','2017-05-16','2017-05-17','2017-05-18','2017-05-19','2017-05-20','2017-05-21','2017-05-22','2017-05-23','2017-05-24','2017-05-25','2017-05-26','2017-05-27','2017-05-28','2017-05-29','2017-05-30','2017-05-31']


list_of_date2=['20160603','20160604','20160605','20160606','20160607','20160608','20160609','20160610','20160611','20160612','20160613','20160614','20160615','20160616','20160617','20160618','20160619','20160620','20160621','20160622','20160623','20160624','20160625','20160626','20160627','20160628','20160629','20160630',\
               '20160701','20160702','20160703','20160704','20160705','20160706','20160707','20160708','20160709','20160710','20160711','20160712','20160713','20160714','20160715','20160716','20160717','20160718','20160719','20160720','20160721','20160722','20160723','20160724','20160725','20160726','20160727','20160728','20160729','20160730','20160731',\
               '20160801','20160802','20160803','20160804','20160805','20160806','20160807','20160808','20160809','20160810','20160811','20160812','20160813','20160814','20160815','20160816','20160817','20160818','20160819','20160820','20160821','20160822','20160823','20160824','20160825','20160826','20160827','20160828','20160829','20160830','20160831',\
               '20160901','20160902','20160903','20160904','20160905','20160906','20160907','20160908','20160910','20160911','20160912','20160913','20160914','20160915','20160916','20160917','20160918','20160919','20160920','20160921','20160922','20160923','20160924','20160925','20160926','20160927','20160928','20160929','20160930',\
               '20161001','20161002','20161003','20161004','20161005','20161006','20161007','20161008','20161009','20161010','20161011','20161012','20161013','20161014','20161015','20161016','20161017','20161018','20161019','20161020','20161021','20161022','20161023','20161024','20161025','20161026','20161027','20161028','20161029','20161030','20161031',\
               '20161101','20161102','20161103','20161104','20161105','20161106','20161107','20161108','20161109','20161110','20161111','20161112','20161113','20161114','20161115','20161116','20161117','20161119','20161120','20161121','20161122','20161123','20161124','20161125','20161126','20161127','20161128','20161129','20161130',\
               '20161201','20161202','20161203','20161204','20161205','20161206','20161207','20161208','20161209','20161210','20161211','20161212','20161213','20161214','20161215','20161216','20161217','20161219','20161220','20161221','20161222','20161223','20161224','20161225','20161226','20161227','20161228','20161229','20161230','20161231',\
               '20170101','20170102','20170103','20170104','20170105','20170106','20170107','20170108','20170109','20170110','20170111','20170112','20170113','20170114','20170115','20170116','20170117','20170118','20170119','20170120','20170121','20170122','20170123','20170124','20170125','20170126','20170127','20170128','20170129','20170130','20170131',\
               '20170201','20170202','20170203','20170204','20170205','20170206','20170207','20170208','20170209','20170210','20170211','20170212','20170213','20170214','20170215','20170216','20170217','20170218','20170219','20170220','20170221','20170222','20170223','20170224','20170225','20170226','20170227','20170228',\
               '20170301','20170302','20170303','20170304','20170305','20170306','20170307','20170308','20170309','20170310','20170311','20170312','20170313','20170314','20170315','20170316','20170317','20170318','20170319','20170320','20170321','20170322','20170323','20170324','20170325','20170326','20170327','20170328','20170329','20170330','20170331',\
               '20170401','20170402','20170403','20170404','20170405','20170406','20170407','20170408','20170409','20170410','20170411','20170412','20170413','20170414','20170415','20170416','20170417','20170418','20170419','20170420','20170421','20170422','20170423','20170424','20170425','20170426','20170427','20170428','20170429','20170430',\
               '20170502','20170503','20170504','20170505','20170506','20170507','20170508','20170509','20170510','20170511','20170512','20170513','20170514','20170515','20170516','20170517','20170518','20170519','20170520','20170521','20170522','20170523','20170524','20170525','20170526','20170527','20170528','20170529','20170530','20170531']


values__1 = []  #  MOSQUITO VALUE

values__2 = []  #  NO2

values__3 = []  #  O3

values__4 = []  #  CO

values__5 = []  #  SO2

def doIt():
    keyPath=os.path.join(os.getcwd(), 'src', 'key.properties')
    key=mylib.getKey(keyPath)
    
    # (1) make params with resource IDs
    KEY=key['dataseoul1']
    TYPE='xml'
    SERVICE='MosquitoStatus'
    START_INDEX= '1'
    END_INDEX= '4'
    
    size=len(list_of_date1)
    for i in range(size):

        MOSQUITO_DATE=list_of_date1[i]
        params=os.path.join(KEY,TYPE,SERVICE,START_INDEX,END_INDEX,MOSQUITO_DATE)

        # (2) make a full url
        _url='http://openAPI.seoul.go.kr:8088/'
        url=urlparse.urljoin(_url,params)
        url_real = ''
        for i in url:
            if i=='\\':
                url_real += '/'
            else:
                url_real += i

        # (3) get url
        data=requests.get(url_real).text
        
        # (4) get MOSQUITO_VALUE URL을 text형식으로 바꾸고 regex로 파싱한다
        regex="<MOSQUITO_VALUE>(.*)</MOSQUITO_VALUE>"
        print ">MOSQUITO_DATE:  ",MOSQUITO_DATE
        
        values = re.findall(regex, data)      
        values = map(str,values)
        strvalues=",".join(values)
        global values__1
        flovalues=float(strvalues)
        values__1.append(flovalues)
        
        print "-MOSQUITO VALUE: ", strvalues
        print "--------------------------"
        
        #(5) mongodb에 데이터 넣기
        
        client = MongoClient()
        db = client.myProject #databae name
        db.mosqudata.insert({"Mosquito_date":MOSQUITO_DATE,"Mosquito_count":strvalues})
    
        
def doIt2():
    keyPath=os.path.join(os.getcwd(), 'src', 'key.properties')
    key=mylib.getKey(keyPath)
    
    # (1) make params with resource IDs
    KEY=key['dataseoul2']
    TYPE='xml'
    SERVICE='DailyAverageAirQuality'
    START_INDEX= '1'
    END_INDEX= '143' 
    MSRSTE_NM='송파구'
    size=len(list_of_date2)
    
    print "                              "
    print "                              "
        
    for i in range(size):
        MSRDT_DE = list_of_date2[i]
        params=os.path.join(KEY,TYPE,SERVICE,START_INDEX,END_INDEX,MSRDT_DE,MSRSTE_NM)

        # (2) make a full url
        _url='http://openAPI.seoul.go.kr:8088/'
        url=urlparse.urljoin(_url,params)
        url_real = ''
        for i in url:
            if i=='\\':
                url_real += '/'
            else:
                url_real += i

        # (3) get url
    
        data=requests.get(url_real).text
        
        #(4) get VALUE URL을 text형식으로 바꾸고 regex로 파싱한다
        regex1="<NO2>(.*)</NO2>"
        regex2="<O3>(.*)</O3>"
        regex3="<CO>(.*)</CO>"
        regex4="<SO2>(.*)</SO2>"
        
        print ">MSRDT_DE:",MSRDT_DE
        
        values1 = re.findall(regex1, data)
        values1 = map(str,values1)
        strvalues1 = ",".join(values1)
        global values__2
        flovalues1=float(strvalues1)
        values__2.append(flovalues1)
        print "-NO2:", strvalues1
        
        values2 = re.findall(regex2, data)
        values2 = map(str,values2)
        strvalues2 = ",".join(values2)
        global values__3
        flovalues2=float(strvalues2)        
        values__3.append(flovalues2)
        print "-O3: ", strvalues2
        
        values3 = re.findall(regex3, data)
        values3 = map(str,values3)
        strvalues3 = ",".join(values3)
        global values__4
        flovalues3=float(strvalues3)
        values__4.append(flovalues3)
        print "-CO: ", strvalues3
        
        values4 = re.findall(regex4, data)
        values4 = map(str,values4)
        strvalues4 = ",".join(values4)
        global values__5
        flovalues4=float(strvalues4)
        values__5.append(flovalues4)
        print "-SO2:",strvalues4
        
        print "--------------------------------"
        
        #(5) mongodb에 데이터 넣기

        client = MongoClient()
        db = client.myProject #databae name
        db.atmosdata.insert({"Atmos_date":MSRDT_DE,"Atmos_NO2":strvalues1,"Atmos_O3":strvalues2,"Atmos_C0":strvalues3,"Atmos_SO2":strvalues4})        


def doIt3():
    global values__1
    global values__2
    global values__3
    global values__4 
    global values__5 
    global list_of_date2
    
    tick_val = [278,556,834,1112,1390,1668,1946,2224,2502,2780,3058,3336,3614,3892,4170,4448,4726,5004,5282,5560,5838,6116,6394,6672,6950,7228,7506,7784,8062,8340,8618,8896,9174,9452,9730,10008,10286,10564,10842,\
                11120,11398,11676,11954,12232,12510,12788,13066,13344,13622,13900,14178,14456,14734,15012,15290,15568,15846,16124,16402,16680,16958,17236,17514,17792,18070,18348,18626,18904,19182,19460,19738,20016,\
                20294,20572,20850,21128,21406,21684,21962,22240,22518,22796,23074,23352,23630,23908,24186,24464,24742,25020,25298,25576,25854,26132,26410,26688,26966,27244,27522,27800,28078,28356,28634,28912,29190,29468,\
                29746,30024,30302,30580,30858,31136,31414,31692,31970,32248,32526,32804,33082,33360,33638,33916,34194,34472,34750,35028,35306,35584,35862,36140,36418,36696,36974,37252,37530,37808,38086,38364,38642,38920,\
                39198,39476,39754,40032,40310,40588,40866,41144,41422,41700,41978,42256,42534,42812,43090,43368,43646,43924,44202,44480,44758,45036,45314,\
                45592,45870,46148,46426,46704,46982,47260,47538,47816,48094,48372,48650,48928,49206,49484,49762,50040,50318,50596,50874,51152,51430,51708,51986,\
                52264,52542,52820,53098,53376,53654,53932,54210,54488,54766,55044,55322,55600,55878,56156,56434,56712,56990,57268,57546,57824,58102,58380,\
                58658,58936,59214,59492,59770,60048,60326,60604,60882,61160,61438,61716,61994,62272,62550,62828,63106,63384,63662,63940,64218,64496,64774,\
                65052,65330,65608,65886,66164,66442,66720,66998,67276,67554,67832,68110,68388,68666,68944,69222,69500,69778,70056,70334,70612,70890,71168,\
                71446,71724,72002,72280,72558,72836,73114,73392,73670,73948,74226,74504,74782,75060,75338,75616,75894,76172,76450,76728,77006,77284,77562,\
                77840,78118,78396,78674,78952,79230,79508,79786,80064,80342,80620,80898,81176,81454,81732,82010,82288,82566,82844,83122,83400,83678,83956,\
                84234,84512,84790,85068,85346,85624,85902,86180,86458,86736,87014,87292,87570,87848,88126,88404,88682,88960,89238,89516,89794,90072,90350,\
                90628,90906,91184,91462,91740,92018,92296,92574,92852,93130,93408,93686,93964,94242,94520,94798,95076,95354,95632,95910,96188,96466,96744,\
                97022,97300,97578,97856,98134,98412,98690,98968,99246,99524,99802]
    tick_val2 = [278,556,834,1112,1390,1668,1946,2224,2502,2780,3058,3336,3614,3892,4170,4448,4726,5004,5282,5560,5838,6116,6394,6672,6950,7228,7506,7784,8062,8340,8618,8896,9174,9452,9730,10008,10286,10564,10842,\
                11120,11398,11676,11954,12232,12510,12788,13066,13344,13622,13900,14178,14456,14734,15012,15290,15568,15846,16124,16402,16680,16958,17236,17514,17792,18070,18348,18626,18904,19182,19460,19738,20016,\
                20294,20572,20850,21128,21406,21684,21962,22240,22518,22796,23074,23352,23630,23908,24186,24464,24742,25020,25298,25576,25854,26132,26410,26688,26966,27244,27522,27800,28078,28356,28634,28912,29190,29468,\
                29746,30024,30302,30580,30858,31136,31414,31692,31970,32248,32526,32804,33082,33360,33638,33916,34194,34472,34750,35028,35306,35584,35862,36140,36418,36696,36974,37252,37530,37808,38086,38364,38642,38920,\
                39198,39476,39754,40032,40310,40588,40866,41144,41422,41700,41978,42256,42534,42812,43090,43368,43646,43924,44202,44480,44758,45036,45314,\
                45592,45870,46148,46426,46704,46982,47260,47538,47816,48094,48372,48650,48928,49206,49484,49762,50040,50318,50596,50874,51152,51430,51708,51986,\
                52264,52542,52820,53098,53376,53654,53932,54210,54488,54766,55044,55322,55600,55878,56156,56434,56712,56990,57268,57546,57824,58102,58380,\
                58658,58936,59214,59492,59770,60048,60326,60604,60882,61160,61438,61716,61994,62272,62550,62828,63106,63384,63662,63940,64218,64496,64774,\
                65052,65330,65608,65886,66164,66442,66720,66998,67276,67554,67832,68110,68388,68666,68944,69222,69500,69778,70056,70334,70612,70890,71168,\
                71446,71724,72002,72280,72558,72836,73114,73392,73670,73948,74226,74504,74782,75060,75338,75616,75894,76172,76450,76728,77006,77284,77562,\
                77840,78118,78396,78674,78952,79230,79508,79786,80064,80342,80620,80898,81176,81454,81732,82010,82288,82566,82844,83122,83400,83678,83956,\
                84234,84512,84790,85068,85346,85624,85902,86180,86458,86736,87014,87292,87570,87848,88126,88404,88682,88960,89238,89516,89794,90072,90350,\
                90628,90906,91184,91462,91740,92018,92296,92574,92852,93130,93408,93686,93964,94242,94520,94798,95076,95354,95632,95910,96188,96466,96744,\
                97022,97300,97578,97856,98134,98412,98690,98968,99246,99524,99802]
    
    fig = plt.figure()
    
    tick_lab = list_of_date2 
    plt.xticks(tick_val,tick_lab)
    ax0 = fig.add_subplot(3,1,1)
    ax0.plot(tick_val,values__1)
    plt.grid(True)
    plt.xticks(tick_val,tick_lab)    
    legend_1=plt.legend('mosquito number')

    
    ax2 = fig.add_subplot(3,1,3)
    ax2.plot(tick_val2,values__4,'y-')
    plt.grid(True)
    plt.xticks(tick_val,tick_lab)
    legend_2=plt.legend('SO2')
    
    
    ax1 = fig.add_subplot(3,1,2)  
    ax1.plot(tick_val2,values__2,'b.')
    ax1.plot(tick_val2,values__3,'g.')
    ax1.plot(tick_val2,values__5,'r.')
    plt.grid(True)    
    plt.xticks(tick_val,tick_lab)   
    legend_3=plt.legend('NO2')
    legend_4=plt.legend('O3')
    legend_5=plt.legend('CO')
    
    plt.xlabel('2016-05 ~ 2017-05')   
    plt.ylabel('Count')
   
    plt.show()
        
        
if __name__ == "__main__":
    doIt()
    doIt2()
    doIt3()